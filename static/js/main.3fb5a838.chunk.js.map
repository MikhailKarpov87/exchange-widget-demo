{"version":3,"sources":["commons/constants.js","api/ratesLoader.js","commons/helpers.js","styles/colors.js","styles/currencyPanel.js","components/CurrencyPanel.jsx","styles/app.js","components/withCurrencySelect.jsx","styles/currencySelect.js","components/CurrencySelect.jsx","components/ExchangeButton.jsx","App.js","index.js"],"names":["currencies","name","symbol","RatesLoader","options","subscribe","baseCurrency","callback","a","_getRates","rates","intervalId","setInterval","updateInterval","responseHasRates","response","quoteCurrencies","filter","currency","data","every","base","axios","get","toast","error","errorMessage","clearInterval","Error","this","isValidValue","value","test","Number","removeLeadingZero","replace","pocketHasEnoughtFunds","values","pockets","colors","primaryColor","secondaryColor","backgroundTop","backgroundMiddle","backgroundBottom","secondCardColor","currencyPanelInput","root","color","borderColor","width","margin","input","padding","fontSize","currencyPanelStyles","selectContainer","inputLabel","panelText","display","justifyContent","InputComponent","withStyles","OutlinedInput","props","currencyType","pocketValue","handleValueChange","currencyRateText","classes","handleFocus","handleBlur","FormControl","variant","InputLabel","htmlFor","className","onFocus","onBlur","id","data-testid","onChange","e","target","startAdornment","InputAdornment","position","endAdornment","labelWidth","appStyles","appContainer","flexDirection","alignItems","minWidth","sideButton","topPanel","background","bottomPanel","buttonContainer","paddingTop","SideButton","Button","withCurrencySelect","ChildComponent","getNextCurrencyName","indexShift","currentIndex","getCurrencyIndex","nextCurrency","currenciesList","isEqualCurrencies","findIndex","getRelatedCurrency","quoteCurrency","handleSelectCurrency","nextCurrencyName","prevCurrencyName","style","alignSelf","onClick","disabled","ArrowLeft","ArrowRight","Component","currencySelect","border","borderRadius","currencySelectStyles","SelectComponent","Select","map","MenuItem","ExchangeButton","handleButtonClick","CurrencyPanelWithSelect","CurrencyPanel","reduce","pocketValues","App","state","selectedCurrencyType","exchangeValues","subscribeForRates","ratesLoader","unsubscribe","updatedRates","setState","calcExchangeValues","quoteCurrencyRate","isBaseCurrencySelected","quoteCurrencyValue","toFixed","newValue","updatedValues","makeExchange","updatedPocketValues","clearValues","success","basePocketAmount","createInverseExchangeRateText","inverseRate","currencyName","actualCurrency","find","updatedExchangeValues","currenciesSelectList","exchangeRate","createCurrenciesSelectList","autoClose","hideProgressBar","closeOnClick","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fb5a838.chunk.js","sourcesContent":["export const currencies = [\n  { name: 'EUR', symbol: '€' },\n  { name: 'GBP', symbol: '£' },\n  { name: 'USD', symbol: '$' },\n];\n\nexport const defaultPocketValue = 50;\n\n//  30 sec loading interval to avoid rate limiting from FX Rates Service\nexport const defaultRatesLoadingInterval = 30 * 1000;\n\nexport const FXRatesSourceURL = 'https://api.exchangeratesapi.io/latest';\n","import axios from 'axios';\nimport { currencies, FXRatesSourceURL } from '../commons/constants';\nimport { toast } from 'react-toastify';\n\nclass RatesLoader {\n  constructor(options) {\n    this.updateInterval = options.updateInterval;\n    this.errorMessage = `Can't get rates :(`;\n  }\n\n  subscribe = (baseCurrency, callback) => {\n    this.baseCurrency = baseCurrency;\n\n    (async () => {\n      const rates = await this._getRates();\n      callback(rates);\n    })();\n\n    this.intervalId = setInterval(async () => {\n      const rates = await this._getRates();\n      callback(rates);\n    }, this.updateInterval);\n  };\n\n  unsubscribe() {\n    clearInterval(this.intervalId);\n  }\n\n  responseHasRates = response => {\n    const quoteCurrencies = currencies.filter(currency => currency.name !== this.baseCurrency);\n\n    return (\n      response &&\n      response.data &&\n      response.data.rates &&\n      quoteCurrencies.every(currency => response.data.rates[currency.name]) &&\n      response.data.base === this.baseCurrency\n    );\n  };\n\n  _getRates = async () => {\n    let response;\n    try {\n      response = await axios.get(`${FXRatesSourceURL}?base=${this.baseCurrency}`);\n    } catch (error) {\n      toast.error(this.errorMessage);\n      clearInterval(this.intervalId);\n    }\n    return this.responseHasRates(response) ? response.data.rates : new Error(this.errorMessage);\n  };\n}\n\nexport default RatesLoader;\n","export const isValidValue = value => !value || (/^(\\d+)((\\.)(\\d{1,2})?)?$/.test(value) && Number(value) < 10e9);\n\nexport const removeLeadingZero = value => value.replace(/^0+(\\d)/, '$1');\n\nexport const pocketHasEnoughtFunds = (values, pockets, baseCurrency) => Number(values.baseCurrency) <= pockets[baseCurrency.name];\n\nexport const createCurrenciesSelectList = (currencies, rates, baseCurrency) => {\n  const currenciesSelectList = currencies\n    .filter(({ name }) => name !== baseCurrency.name)\n    .map(currency => {\n      const exchangeRate = Number(rates[currency.name]).toFixed(4);\n      const name = `${baseCurrency.symbol}1 = ${currency.symbol}${exchangeRate}`;\n      return { id: currency.name, name };\n    });\n\n  return currenciesSelectList;\n};\n","const colors = {\n  primaryColor: '#e7fafe',\n  secondaryColor: '#8cbffa',\n  backgroundTop: '#1f54c3',\n  backgroundMiddle: '#022d88',\n  backgroundBottom: '#4a7fee',\n  secondCardColor: '#2854ac',\n};\n\nexport default colors;\n","import colors from './colors';\n\nexport const currencyPanelInput = {\n  root: {\n    color: colors.primaryColor,\n    '& *': {\n      color: colors.primaryColor,\n      borderColor: colors.primaryColor,\n    },\n    '& div': {\n      width: '1em',\n      margin: 0,\n    },\n  },\n  input: {\n    padding: '12px 6px',\n    fontSize: '1.7em',\n    '& *': {\n      color: colors.primaryColor + ' !important',\n    },\n  },\n};\n\nexport const currencyPanelStyles = {\n  selectContainer: {\n    margin: '1em',\n    '& svg': {\n      color: colors.primaryColor,\n    },\n  },\n  inputLabel: {\n    color: colors.primaryColor,\n  },\n  panelText: {\n    color: colors.secondaryColor,\n    display: 'flex',\n    fontSize: '0.75em',\n    justifyContent: 'space-between',\n    margin: '2em 0',\n  },\n};\n","import React from 'react';\nimport { FormControl, InputAdornment, InputLabel, OutlinedInput } from '@material-ui/core';\nimport { currencyPanelInput, currencyPanelStyles } from '../styles/currencyPanel';\nimport { withStyles } from '@material-ui/styles';\n\nconst InputComponent = withStyles(currencyPanelInput)(OutlinedInput);\n\nconst CurrencyPanel = props => {\n  const {\n    currencyType,\n    value,\n    currency: { name, symbol },\n    pocketValue,\n    handleValueChange,\n    currencyRateText,\n    classes,\n    handleFocus,\n    handleBlur,\n  } = props;\n\n  return (\n    <div>\n      <FormControl variant='outlined'>\n        <InputLabel htmlFor={`${currencyType}-input`} className={classes.inputLabel}>\n          {name}\n        </InputLabel>\n        <InputComponent\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          id={`${currencyType}-input`}\n          data-testid={`${currencyType}-input`}\n          value={value || ''}\n          onChange={e => handleValueChange(e.target.value)}\n          startAdornment={<InputAdornment position='start'>{currencyType === 'baseCurrency' ? '-' : '+'} </InputAdornment>}\n          endAdornment={<InputAdornment position='end'>{symbol}</InputAdornment>}\n          labelWidth={30}\n        />\n      </FormControl>\n\n      <div className={classes.panelText}>\n        <span data-testid='pocket-text'>You have {`${symbol}${pocketValue}`}</span>\n        <span data-testid='inverse-rate-text'>{currencyRateText}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(currencyPanelStyles)(CurrencyPanel);\n","import colors from './colors';\n\nconst appStyles = {\n  appContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    color: colors.primaryColor,\n    fontSize: '1.2em',\n    minWidth: '375px',\n  },\n  sideButton: {\n    root: {\n      color: colors.primaryColor,\n      '&:disabled': {\n        color: colors.secondaryColor,\n      },\n    },\n  },\n  topPanel: {\n    background: `linear-gradient(${colors.backgroundBottom}, ${colors.backgroundTop})`,\n    padding: '2em 0',\n  },\n  bottomPanel: {\n    background: `linear-gradient(${colors.backgroundMiddle}, ${colors.backgroundTop})`,\n    padding: '2em 0',\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: '1em',\n  },\n};\n\nexport default appStyles;\n","import React, { Component } from 'react';\nimport { ArrowLeft, ArrowRight } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/styles';\nimport appStyles from '../styles/app';\nimport { Button } from '@material-ui/core';\n\nconst SideButton = withStyles(appStyles.sideButton)(Button);\n\nconst withCurrencySelect = ChildComponent =>\n  class WithCurrencySelect extends Component {\n    getNextCurrencyName = indexShift => {\n      const currentIndex = this.getCurrencyIndex();\n      const nextCurrency = this.props.currenciesList[currentIndex + indexShift];\n\n      if (!nextCurrency) {\n        return null;\n      }\n\n      if (this.isEqualCurrencies(nextCurrency)) {\n        return this.getNextCurrencyName(indexShift + indexShift);\n      }\n\n      return nextCurrency.name;\n    };\n\n    getCurrencyIndex = () => {\n      const { currenciesList, currencyType } = this.props;\n      const currency = this.props[currencyType];\n      return currenciesList.findIndex(({ name }) => (currency && currency.name ? currency.name === name : null));\n    };\n\n    getRelatedCurrency = () => {\n      const { currencyType, baseCurrency, quoteCurrency } = this.props;\n      return currencyType === 'baseCurrency' ? quoteCurrency : baseCurrency;\n    };\n\n    isEqualCurrencies = currency => {\n      const relatedCurrency = this.getRelatedCurrency(currency);\n      return relatedCurrency.name === currency.name;\n    };\n\n    render() {\n      const { currencyType, handleSelectCurrency } = this.props;\n      const currency = this.props[currencyType];\n      const nextCurrencyName = this.getNextCurrencyName(1);\n      const prevCurrencyName = this.getNextCurrencyName(-1);\n\n      return (\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <SideButton\n            id='previous-currency'\n            data-testid='previous-currency'\n            style={{ alignSelf: 'stretch' }}\n            onClick={() => handleSelectCurrency(currencyType, prevCurrencyName)}\n            disabled={!prevCurrencyName}\n          >\n            <ArrowLeft />\n          </SideButton>\n\n          <ChildComponent {...this.props} currency={currency} />\n\n          <SideButton\n            id='next-currency'\n            data-testid='next-currency'\n            style={{ alignSelf: 'stretch' }}\n            onClick={() => handleSelectCurrency(currencyType, nextCurrencyName)}\n            disabled={!nextCurrencyName}\n          >\n            <ArrowRight />\n          </SideButton>\n        </div>\n      );\n    }\n  };\n\nexport default withCurrencySelect;\n","import colors from './colors';\n\nexport const currencySelect = {\n  root: {\n    color: colors.primaryColor,\n    border: `1px solid ${colors.secondaryColor}`,\n    padding: '2px 12px',\n    '&:focus': {\n      color: colors.primaryColor,\n      border: `1px solid ${colors.secondaryColor}`,\n      borderRadius: '4px',\n    },\n  },\n};\n\nexport const currencySelectStyles = {\n  selectContainer: {\n    margin: '1em',\n    '& svg': {\n      color: colors.primaryColor,\n    },\n  },\n};\n","import React from 'react';\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { currencySelect, currencySelectStyles } from '../styles/currencySelect';\n\nconst SelectComponent = withStyles(currencySelect)(Select);\n\nconst CurrencySelect = props => {\n  const { options, handleSelectCurrency, value, classes } = props;\n\n  return (\n    <div className={classes.selectContainer}>\n      <FormControl variant='outlined'>\n        <SelectComponent\n          id='currency-select'\n          data-testid='currency-select'\n          value={value}\n          onChange={e => handleSelectCurrency('quoteCurrency', e.target.value)}\n        >\n          {options.map(({ id, name }) => (\n            <MenuItem value={id} key={id}>\n              {name}\n            </MenuItem>\n          ))}\n        </SelectComponent>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default withStyles(currencySelectStyles)(CurrencySelect);\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nconst ExchangeButton = props => {\n  const { handleButtonClick, disabled } = props;\n\n  return (\n    <Button onClick={handleButtonClick} disabled={disabled} color='primary' variant='contained' data-testid='exchange-button'>\n      Exchange\n    </Button>\n  );\n};\n\nexport default ExchangeButton;\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport RatesLoader from './api/ratesLoader';\nimport { currencies, defaultPocketValue, defaultRatesLoadingInterval } from './commons/constants';\nimport { createCurrenciesSelectList, isValidValue, pocketHasEnoughtFunds, removeLeadingZero } from './commons/helpers';\nimport CurrencyPanel from './components/CurrencyPanel';\nimport 'react-toastify/dist/ReactToastify.css';\nimport withCurrencySelect from './components/withCurrencySelect';\nimport CurrencySelect from './components/CurrencySelect';\nimport { withStyles } from '@material-ui/styles';\nimport appStyles from './styles/app';\nimport ExchangeButton from './components/ExchangeButton';\nimport { ToastContainer } from 'react-toastify';\n\nconst CurrencyPanelWithSelect = withCurrencySelect(CurrencyPanel);\n\nconst pockets = currencies.reduce((pocketValues, currency) => {\n  pocketValues[currency.name] = defaultPocketValue;\n  return pocketValues;\n}, {});\n\nclass App extends Component {\n  state = {\n    baseCurrency: currencies[0],\n    quoteCurrency: currencies[1],\n    selectedCurrencyType: 'baseCurrency',\n    pockets,\n    exchangeValues: { baseCurrency: '', quoteCurrency: '' },\n    rates: {},\n  };\n\n  componentDidMount() {\n    const { baseCurrency } = this.state;\n\n    this.ratesLoader = new RatesLoader({ updateInterval: defaultRatesLoadingInterval });\n    this.subscribeForRates(baseCurrency);\n  }\n\n  componentWillUnmount() {\n    this.ratesLoader.unsubscribe();\n  }\n\n  subscribeForRates = baseCurrency => {\n    this.ratesLoader && this.ratesLoader.unsubscribe();\n    this.ratesLoader.subscribe(baseCurrency.name, updatedRates => {\n      const { exchangeValues } = this.state;\n\n      this.setState({\n        rates: updatedRates,\n        exchangeValues: this.calcExchangeValues(updatedRates, exchangeValues),\n      });\n    });\n  };\n\n  calcExchangeValues = (rates, values) => {\n    const { quoteCurrency, selectedCurrencyType } = this.state;\n\n    if (values[selectedCurrencyType] === '') {\n      return { baseCurrency: '', quoteCurrency: '' };\n    }\n\n    const quoteCurrencyRate = rates[quoteCurrency.name];\n    const isBaseCurrencySelected = selectedCurrencyType === 'baseCurrency';\n\n    const quoteCurrencyValue = isBaseCurrencySelected\n      ? (Number(values.baseCurrency) * quoteCurrencyRate).toFixed(2)\n      : values.quoteCurrency;\n\n    const baseCurrencyValue = isBaseCurrencySelected\n      ? values.baseCurrency\n      : (Number(values.quoteCurrency) / quoteCurrencyRate).toFixed(2);\n\n    return { baseCurrency: baseCurrencyValue, quoteCurrency: quoteCurrencyValue };\n  };\n\n  handleValueChange = newValue => {\n    const { rates, selectedCurrencyType, exchangeValues } = this.state;\n\n    if (!isValidValue(newValue)) {\n      return;\n    }\n\n    const value = removeLeadingZero(newValue);\n    const values = { ...exchangeValues, [selectedCurrencyType]: value };\n    const updatedValues = this.calcExchangeValues(rates, values);\n\n    this.setState({ exchangeValues: updatedValues });\n  };\n\n  clearValues() {\n    this.setState({ exchangeValues: { baseCurrency: '', quoteCurrency: '' } });\n  }\n\n  makeExchange = () => {\n    const { baseCurrency, quoteCurrency, exchangeValues, pockets } = this.state;\n\n    if (exchangeValues.baseCurrency <= 0) {\n      toast.error('Enter valid value!');\n      return;\n    }\n\n    if (!pocketHasEnoughtFunds(exchangeValues, pockets, baseCurrency)) {\n      const basePocketAmount = `${baseCurrency.symbol}${pockets[baseCurrency.name]}`;\n      toast.error(`Not enough funds (${basePocketAmount} available)!`);\n      return;\n    }\n\n    const updatedPocketValues = {\n      [baseCurrency.name]: (Number(pockets[baseCurrency.name]) - Number(exchangeValues.baseCurrency)).toFixed(2),\n      [quoteCurrency.name]: (Number(pockets[quoteCurrency.name]) + Number(exchangeValues.quoteCurrency)).toFixed(2),\n    };\n    this.setState({ pockets: { ...pockets, ...updatedPocketValues } }, this.clearValues());\n    toast.success('Exchange done!');\n  };\n\n  createInverseExchangeRateText = () => {\n    const { rates, baseCurrency, quoteCurrency } = this.state;\n    const inverseRate = Number(1 / rates[quoteCurrency.name]).toFixed(2);\n    return `${quoteCurrency.symbol}1 = ${baseCurrency.symbol}${inverseRate}`;\n  };\n\n  handleSelectCurrency = (currencyType, currencyName) => {\n    const { rates, exchangeValues } = this.state;\n\n    const actualCurrency = currencies.find(({ name }) => currencyName === name);\n    if (currencyType === 'baseCurrency') {\n      this.subscribeForRates(actualCurrency);\n    }\n\n    this.setState({ [currencyType]: actualCurrency }, () => {\n      const updatedExchangeValues = this.calcExchangeValues(rates, exchangeValues);\n      this.setState({ exchangeValues: updatedExchangeValues });\n    });\n  };\n\n  handleFocus = () => {\n    this.setState({ selectedCurrencyType: 'quoteCurrency' });\n  };\n\n  handleBlur = () => {\n    this.setState({ selectedCurrencyType: 'baseCurrency' });\n  };\n\n  render() {\n    const { baseCurrency, quoteCurrency, pockets, exchangeValues, rates } = this.state;\n    const { classes } = this.props;\n    const currenciesSelectList = createCurrenciesSelectList(currencies, rates, baseCurrency);\n\n    return (\n      <div className={classes.appContainer}>\n        <CurrencySelect\n          options={currenciesSelectList}\n          handleSelectCurrency={this.handleSelectCurrency}\n          value={quoteCurrency.name}\n        />\n\n        <div className={classes.topPanel}>\n          <CurrencyPanelWithSelect\n            currencyType='baseCurrency'\n            baseCurrency={baseCurrency}\n            quoteCurrency={quoteCurrency}\n            currenciesList={currencies}\n            value={exchangeValues.baseCurrency}\n            pocketValue={pockets[baseCurrency.name]}\n            handleValueChange={this.handleValueChange}\n            handleSelectCurrency={this.handleSelectCurrency}\n          />\n        </div>\n\n        <div className={classes.bottomPanel}>\n          <CurrencyPanelWithSelect\n            currencyType='quoteCurrency'\n            baseCurrency={baseCurrency}\n            quoteCurrency={quoteCurrency}\n            currenciesList={currencies}\n            value={exchangeValues.quoteCurrency}\n            pocketValue={pockets[quoteCurrency.name]}\n            handleValueChange={this.handleValueChange}\n            handleSelectCurrency={this.handleSelectCurrency}\n            currencyRateText={this.createInverseExchangeRateText()}\n            handleFocus={this.handleFocus}\n            handleBlur={this.handleBlur}\n          />\n        </div>\n        <div className={classes.buttonContainer}>\n          <ExchangeButton handleButtonClick={this.makeExchange} />\n        </div>\n        <ToastContainer position='top-center' autoClose={5000} hideProgressBar={true} closeOnClick pauseOnHover />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(appStyles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}